<div class="row">
  <div class="col-md-9">
    <div class="calendar-navigation">
      <%= link_to '<', installer_calendar_path(week: (@current_week == 1 ? 52 : @current_week - 1), year: (@current_week == 1 ? @current_year - 1 : @current_year)), class: 'nav-arrow' %>
      <div class="current-week">
        Week Ending: <%= @end_date.strftime("%m/%d/%y") %>
      </div>
      <%= link_to '>', installer_calendar_path(week: (@current_week == 52 ? 1 : @current_week + 1), year: (@current_week == 52 ? @current_year + 1 : @current_year)), class: 'nav-arrow' %>
      <%= link_to 'Back to Appointments Calendar', root_path, class: 'btn btn-secondary' %>
      <% if current_user.super_admin? || current_user.admin? %>
        <button onclick="openJobSelectionModal()" class="btn btn-primary" style="margin-left: 10px;">Assign Job</button>
      <% end %>
    </div>

    <div class="calendar">
      <div class="calendar-header">
        <div class="calendar-crew-header">Crew</div>
        <div class="calendar-day">Mon</div>
        <div class="calendar-day">Tue</div>
        <div class="calendar-day">Wed</div>
        <div class="calendar-day">Thu</div>
        <div class="calendar-day">Fri</div>
        <div class="calendar-day">Sat</div>
      </div>
      <div class="calendar-body">
        <% 10.times do |row_index| %>
          <div class="calendar-week">
            <div class="calendar-crew">
              <% if row_index < @crews.length %>
                <strong><%= @crews[row_index].name %></strong>
                 <h3>&</h3> 
                  <p><%= @crews[row_index].laborer1&.name %></p>
                 <p><%= @crews[row_index].laborer2&.name %></p>
              <% else %>
                No Crew
              <% end %>
            </div>
            <% (@start_date..@end_date).each do |day| %>
              <% next if day.sunday? %> <!-- Skip Sundays -->
              <% day_class = day.today? ? 'today' : '' %>
              <div class="calendar-day-block <%= day_class %>" style="height: 100px;">
                <% if row_index < @crews.length %>
                  <% crew = @crews[row_index] %>
                  <% assignment = Assignment.find_by(crew_id: crew.id, date: day) %>
                  <% if assignment %>
                    <div class="job-details" data-job-id="<%= assignment.job.id %>">
                      <%= assignment.job.customer_name %> - <%= assignment.job.address %>
                      <br>
                    </div>
                                          <button onclick="unassignJob('<%= assignment.id %>')" class="btn btn-primary btn-sm">Unassign</button>
                  <% else %>
                    No Job
                  <% end %>
                <% end %>
              </div>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
  </div>

  <div class="modal" id="jobModal" tabindex="-1" role="dialog" aria-labelledby="jobModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="jobModalLabel">Job Details</h5>
          <button type="button" class="close" aria-label="Close" onclick="closeJobModal()">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body" id="job-details">
          <!-- Job details will be dynamically loaded here -->
        </div>
      </div>
    </div>
  </div>
  
  <div class="col-md-3">
    <div class="job-sidebar">
      <h3>Scheduled Jobs</h3>
      <% @jobs.where.not(crew: nil).each do |job| %> <!-- Jobs with a crew assigned -->
        <div class="job">
          <strong><%= job.job_number %></strong>
          <p><%= job.customer_name %></p>
          <p>Salesman: <%= job.salesman.name %></p>
          <p>Crew: <%= job.crew.name %> - Start Date: <%= job.install_start_date %></p>
        </div>
      <% end %>
    </div>

    <div class="job-sidebar">
      <h3>Not Scheduled Jobs</h3>
      <% @jobs.where(crew: nil).each do |job| %> <!-- Jobs without a crew assigned -->
        <div class="job">
          <strong><%= job.job_number %></strong>
          <p><%= job.customer_name %></p>
          <p>Salesman: <%= job.salesman.name %></p>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Job Selection Modal -->
  <div id="job-selection-modal" style="display:none;">
    <h3>Select a Job</h3>
    <select id="job-select">
      <% @jobs.where(installed: false).each do |job| %>
        <option value="<%= job.id %>"><%= job.customer_name %> - <%= job.address %></option>
      <% end %>
    </select>
    <label for="start-date">Start Date:</label>
    <input type="date" id="start-date" />
    <label for="end-date">End Date:</label>
    <input type="date" id="end-date" />

    <label for="crew-select">Select Crew:</label>
    <select id="crew-select" class="form-control">
      <option value="">Select Crew</option>
      <% @crews.each do |crew| %>
        <option value="<%= crew.id %>"><%= crew.name %></option>
      <% end %>
    </select>
    <button onclick="assignJobToDate()">Assign</button>
    <button onclick="closeJobSelectionModal()" style="float:right;">Cancel</button>
  </div>

  <style>
    .calendar-crew {
      width: 100px;
      text-align: center;
      border: 1px solid #ddd;
      background-color: #f9f9f9;
      padding: 5px;
    }
    .calendar-crew p{
      font-size: 8px;
      margin-bottom: 0;
    }
    .calendar-crew h3{
      font-size: 12px;
      margin: 0;
    }
    .job-details {
      cursor: pointer;
    }
  </style> 
</div>

<script>
  var selectedCrews = {}; // Store the selected crew for each row

  function setCrew(rowIndex, crewId) {
    selectedCrews[rowIndex] = crewId;
  }

  function openJobSelectionModal() {
    document.getElementById('job-selection-modal').style.display = 'flex';
  }

  function closeJobSelectionModal() {
    document.getElementById('job-selection-modal').style.display = 'none';
  }

  function assignJobToDate() {
    var jobId = document.getElementById('job-select').value;
    var startDate = document.getElementById('start-date').value;
    var endDate = document.getElementById('end-date').value;
    var crewId = document.getElementById('crew-select').value;

    if (!crewId) {
      alert('Please select a crew.');
      return;
    }

    fetch('<%= assign_job_path %>', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': '<%= form_authenticity_token %>'
      },
      body: JSON.stringify({ job_id: jobId, start_date: startDate, end_date: endDate, crew_id: crewId })
    }).then(response => {
      if (response.ok) {
        window.location.reload();
      } else {
        response.json().then(data => {
          alert('Error assigning job: ' + (data.message || 'Unknown error'));
        });
      }
    }).catch(error => {
      console.error('Fetch error:', error);
      alert('Error assigning job: ' + error.message);
    });
  }

  function unassignJob(assignmentId) {
    fetch('<%= unassign_job_path %>', {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': '<%= form_authenticity_token %>'
      },
      body: JSON.stringify({ assignment_id: assignmentId })
    }).then(response => {
      if (response.ok) {
        window.location.reload();
      } else {
        alert('Error unassigning job.');
      }
    });
  }

document.addEventListener('turbo:load', function() {
  document.querySelectorAll('.job-details').forEach(function(element) {
    element.addEventListener('click', function() {
      var jobId = this.dataset.jobId;
      fetch(`/jobs/${jobId}.json`)
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          console.log('Received job data:', data);

          var jobDetails = `
          <div class="col-md-6" id="job-deets">
            <p><strong>Job Number:</strong> ${data.job_number}</p>
            <p><strong>Customer Name:</strong> ${data.customer_name}</p>
            <p><strong>Address:</strong> ${data.address}</p>
            <p><strong>Customer Phone:</strong> ${data.customer_phone}</p>
            <p><strong>Customer Email:</strong> ${data.customer_email}</p>
            <p><strong>Total Amount:</strong> $${data.total_amount}</p>
            <p><strong>Type of Work:</strong> ${data.type_of_work}</p>
            <p><strong>Installed?</strong> ${data.installed}</p>
            <p><strong>Install By:</strong> ${data.crew ? data.crew.name : 'N/A'}</p>
            <p><strong>Install Date:</strong> ${data.install_date || 'N/A'}</p>
            <p><strong>Install Start Date:</strong> ${data.install_start_date || 'N/A'}</p>
            <p><strong>Install End Date:</strong> ${data.install_end_date || 'N/A'}</p>
          </div>
          <div class="col-md-12" id="job-attach">
            <div id="attachments-carousel" class="carousel">
              ${data.files.map((file, index) => {
                if (!file || !file.url) {
                  return '<p>File data missing or corrupt.</p>';
                }
                const fileType = file.url.split('.').pop().toLowerCase();
                return `<div class="carousel-item ${index === 0 ? 'active' : ''}">
                  ${['jpg', 'jpeg', 'png', 'gif'].includes(fileType) ? 
                  `<img src="${file.url}" alt="${file.filename || 'Image'}" style="max-width: 100%; margin-bottom: 10px;">` : 
                  fileType === 'pdf' ? `<embed src="${file.url}" width="100%" height="100%" type="application/pdf">` : 
                  `<a href="${file.url}" target="_blank">${file.filename || 'File'}</a>`}
                </div>`;
              }).join('') || '<p>No attachments available.</p>'}
            </div>
            <button class="carousel-control-prev" type="button" onclick="prevSlide()">&#10094;</button>
            <button class="carousel-control-next" type="button" onclick="nextSlide()">&#10095;</button>
          </div>
          `;
          document.getElementById('job-details').innerHTML = jobDetails;
          document.getElementById('jobModal').style.display = 'block';
          initCarousel();
        })
        .catch(error => {
          console.error('Error fetching job details:', error);
          alert('An error occurred while fetching job details.');
        });
    });
  });
});

let currentSlide = 0;

function initCarousel() {
  showSlide(currentSlide);
}

function showSlide(index) {
  const slides = document.querySelectorAll('#attachments-carousel .carousel-item');
  if (index >= slides.length) currentSlide = 0;
  if (index < 0) currentSlide = slides.length - 1;

  slides.forEach(slide => slide.classList.remove('active'));
  slides[currentSlide].classList.add('active');
}

function nextSlide() {
  showSlide(++currentSlide);
}

function prevSlide() {
  showSlide(--currentSlide);
}



function closeJobModal() {
  document.getElementById('jobModal').style.display = 'none';
}



</script>
